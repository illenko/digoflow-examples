id: purchase
name: Purchase Flow

entrypoint:
  type: http-handler
  config:
    method: POST
    path: /purchase

input:
  headers:
    - name: x-api-key
      type: string
  body: 
    type: json
    fields:
      - name: id
        type: string
      - name: description
        type: string
      - name: amount
        type: float
      - name: card
        type: string
      - name: payer.id
        type: string
      - name: payer.name.first
        type: string
      - name: payer.name.last
        type: string
      - name: paymentSystem.url
        type: string
      - name: paymentSystem.apiKey
        type: string

tasks:
  - id: logDescription
    type: digoflow.log
    input:
      - name: description
        type: string
        value: "This is a description from input: {{ input.body.description }}"

  - id: buildPayerDetails
    type: digoflow.toJson
    input:
      - name: id
        type: string
        value: "{{ input.body.payer.id }}"
      - name: name.first
        type: string
        value: "{{ input.body.payer.name.first }}"
      - name: name.last
        type: string
        value: "{{ input.body.payer.name.last }}"

  - id: generateOrderId
    type: uuidGenerator

  - id: callToPaymentSystem
    type: digoflow.httpRequest
    input:
      - name: uri
        type: string
        value: "{{ input.body.paymentSystem.url }}/Payment"
      - name: method
        type: string
        value: POST
      - name: header.x-api-key
        type: string
        value: "Authorization: {{ input.body.paymentSystem.apiKey }}"
      - name: body.id
        type: string
        value: "{{ output.generateOrderId.result }}"
      - name: body.card
        type: string
        value: "{{ input.body.card }}"
      - name: body.payer
        type: string
        value: "{{ input.body.payer.name.first }} {{ input.body.payer.name.last }}"
      - name: body.amount
        type: float
        value: "{{ input.body.amount }}"